name: Release

on:
  push:
    tags:
      - 'v*'


jobs:
  android-and-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: cargo install cargo-expand # needed for flutter_rust_bridge_codegen
      - run: cargo install 'flutter_rust_bridge_codegen@^2.0.0-dev.0'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml # path to pubspec.yaml

      - run: flutter_rust_bridge_codegen generate
      - run: flutter pub get
      - run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev
          sudo apt install rpm patchelf
          sudo apt install locate
      - run: dart pub global activate flutter_distributor
      - run: flutter_distributor release --name=dev --jobs=release-linux-rpm
      - run: flutter_distributor release --name=dev --jobs=release-linux-deb
      - run: flutter_distributor release --name=dev --jobs=release-linux-appimage
      - run: flutter_distributor release --name=dev --jobs=release-android
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: apk-rpm-deb-appimage
          # every artifact that ends with .apk and .rpm
          path: |
            ./dist/**/*.apk
            ./dist/**/*.rpm
            ./dist/**/*.deb
            ./dist/**/*.AppImage
          if-no-files-found: error
          retention-days: 1 # delete artifacts after 1 day

  windows:
    runs-on: windows-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - run: cargo install cargo-expand # needed for flutter_rust_bridge_codegen
      - run: cargo install 'flutter_rust_bridge_codegen@^2.0.0-dev.0'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml # path to pubspec.yaml

      - run: flutter_rust_bridge_codegen generate
      - run: flutter pub get

      - name: Install Chocolatey
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
          iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
        shell: powershell

      - name: Install Inno Setup
        run: |
          choco feature enable -n allowGlobalConfirmation
          choco install innosetup --force

      - run: dart pub global activate flutter_distributor
      - run: flutter_distributor release --name=dev --jobs=release-windows-exe
      - run: echo 'y' | flutter_distributor release --name=dev --jobs=release-windows-msix
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: exe-msix
          path: |
            ./dist/**/*.exe
            ./dist/**/*.msix
          if-no-files-found: error
          retention-days: 1 # delete artifacts after 1 day


  release:
    needs: [ android-and-linux, windows ]
    runs-on: ubuntu-latest
    steps:
      - name: Download android and linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: apk-rpm-deb
          path: artifacts
          github_token: ${{ secrets.TOKEN }}
      - name: Download windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: exe-msix
          path: artifacts
          github_token: ${{ secrets.TOKEN }}

      - name: Create a Release in GitHub
        uses: ncipollo/release-action@v1
        with:
          artifacts: "artifacts/**/*.apk,artifacts/**/*.rpm,artifacts/**/*.deb,artifacts/**/*.AppImage,artifacts/**/*.exe,artifacts/**/*.msix"
          token: ${{ secrets.TOKEN }}
          commit: ${{ github.sha }}
          bodyFile: INSTALLATION_INSTRUCTIONS.md

